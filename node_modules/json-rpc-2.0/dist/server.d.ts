import { JSONRPCRequest, JSONRPCResponse, JSONRPCParams } from "./models";
export declare type SimpleJSONRPCMethod = (params?: Partial<JSONRPCParams>) => any;
export declare type JSONRPCMethod<ServerParams = void> = (request: JSONRPCRequest) => JSONRPCResponsePromise | ((serverParams?: ServerParams) => JSONRPCResponsePromise);
export declare type JSONRPCResponsePromise = PromiseLike<JSONRPCResponse | null>;
export declare class JSONRPCServer<ServerParams = void> {
    private nameToMethodDictionary;
    constructor();
    addMethod(name: string, method: SimpleJSONRPCMethod): void;
    private toJSONRPCMethod;
    addMethodAdvanced(name: string, method: JSONRPCMethod<ServerParams>): void;
    receive(request: JSONRPCRequest, serverParams?: ServerParams): JSONRPCResponsePromise;
    private callMethod;
}
